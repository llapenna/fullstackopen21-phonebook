{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["base","personsService","getAll","axios","get","then","response","data","create","person","post","update","id","newPerson","patch","remove","delete","Title","text","Inputs","value","handleChange","onChange","e","prev","name","target","number","SubmitButton","type","Form","handleSubmit","onSubmit","Person","refresh","handleError","handleNotification","style","paddingRight","onClick","window","confirm","catch","Numbers","persons","filter","filteredPersons","toLowerCase","includes","map","p","Search","handleChangeFilter","Notification","notification","message","className","error","App","initialState","useState","setPersons","setNewPerson","setFilter","setNotification","cleanNotification","notif","setTimeout","refreshPersons","useEffect","preventDefault","findIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9399811e.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst base = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios\r\n    .get(base)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst create = person => {\r\n  return axios\r\n    .post(base, person)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  return axios\r\n    .patch(`${base}/${id}`, newPerson)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios\r\n    .delete(`${base}/${id}`)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst personsService = { getAll, create, update, remove }\r\n\r\nexport default personsService","// Core\nimport React, { useEffect, useState } from 'react'\n\n// Services\nimport personsService from './services/persons'\n\n// Styles\nimport './index.css'\n\nconst Title = ({text}) => <h2>{text}</h2>\n\nconst Inputs = ({value, handleChange}) => {\n\n  const handleChangeName = e => {\n    handleChange(prev => ({...prev, name: e.target.value})) // Keeps the number value, but alters the name\n  }\n  const handleChangePhone = e => {\n    handleChange(prev => ({...prev, number: e.target.value})) // Keeps the name value, but alters the number\n  }\n\n  return (\n    <div>\n      <div>name: <input onChange={handleChangeName} value={value.name} /></div>\n      <div>phone: <input onChange={handleChangePhone} value={value.number} /></div>\n    </div>\n  )\n}\nconst SubmitButton = () => (\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n)\nconst Form = ({newPerson,handleSubmit, handleChange}) => (\n  <>\n    <Title text={'Add new Person'} />\n    <form onSubmit={handleSubmit}>\n      <Inputs handleChange={handleChange} value={newPerson} />\n      <SubmitButton />\n    </form>\n  </>\n)\n\nconst Person = ({person, refresh, handleError, handleNotification}) => {\n\n  const handleDelete = () => {\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n      personsService.remove(person.id)\n        .then(() => {\n          handleNotification(`${person.name} deleted successfully.`)\n          refresh()\n        })\n        .catch(e => {\n          handleError(`${person.name} has already been deleted from server`)\n          refresh()\n        })\n    }\n  }\n\n  // Table formatting for better looks\n  return (\n    <tr>\n      <td style={{paddingRight: '15px'}}>{person.name}:</td>\n      <td>{person.number}</td>\n      <td><button onClick={handleDelete}>Delete</button></td>\n    </tr>\n  )\n}\nconst Numbers = ({persons, filter, refresh, handleError, handleNotification}) => {\n\n  const filteredPersons = filter === ''\n    ? persons // No filter is applied\n    // Filtering in lower case to create a case insensitive filter\n    : persons.filter( ({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <>\n      <Title text='Numbers' />\n      <table>\n        <tbody>\n          { filteredPersons.map(p => \n            <Person \n              key={p.name} \n              person={p} \n              refresh={refresh}\n              handleError={handleError}\n              handleNotification={handleNotification}\n            />)}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nconst Search = ({value, handleChangeFilter}) => (\n  <div>\n    Search: <input value={value} onChange={handleChangeFilter}/>\n  </div>\n)\n\nconst Notification = ({notification}) => {\n\n  return (\n    notification.message !== ''\n    ?\n    <div className={notification.error ? 'error' : 'success'}>\n      {notification.message}\n    </div>\n    : null\n  )\n}\n\nconst App = () => {\n\n  const initialState = {\n    name: '',\n    number: '',\n  }\n\n  const [persons, setPersons] = useState([initialState]) \n  const [newPerson, setNewPerson] = useState(initialState)\n  \n  const [filter, setFilter] = useState('')\n\n  const [notification, setNotification] = useState({message: '', error: true})\n\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    // findIndex returns -1 if no object was found\n    if (persons.findIndex( ({name}) => name === newPerson.name) === -1) {\n    \n      personsService.create(newPerson)\n        .then(newPerson => {\n          setPersons([...persons, newPerson])\n          handleNotification('Phonebook entry created successfully')\n        })\n        .catch(e => {\n          handleError('Cannot create phonebook entry.')\n        })\n\n      setNewPerson({name:'', number:''}) // Clears the input\n    }\n    else\n    {\n      if (window.confirm(`${newPerson.name} is already in the phonebook, replace the old number?`)) {\n        const id = persons.filter(p => p.name === newPerson.name)[0].id\n        \n        personsService\n          .update(id, {number: newPerson.number})\n          .then(() => {\n            handleNotification(`${newPerson.name}'s number updated successfully.`)\n            refreshPersons()\n          })\n          .catch(e => handleError(`Cannot update ${newPerson.name}'s number.`))\n      }\n    }\n  }\n\n  const handleChangeFilter = e => {\n    setFilter(e.target.value)\n  }\n\n  const handleError = error => {\n    setNotification({message: error, error: true})\n    cleanNotification()\n  }\n  const handleNotification = notif => {\n    setNotification({message: notif, error: false})\n    cleanNotification()\n  }\n  const cleanNotification = () =>{\n    setTimeout(() => setNotification({message: '', error: false}), 5000)\n  }\n\n  const refreshPersons = () => {\n    personsService.getAll()\n      .then(persons => setPersons(persons))\n      .catch(e => {\n        handleError('Error while requesting all entries.')\n      })\n  }\n\n  useEffect(refreshPersons, [])\n\n  return (\n    <div>\n      <Title text='Phonebook' />\n      <Notification notification={notification} />\n      <Search value={filter} handleChangeFilter={handleChangeFilter} />\n      <Form \n        newPerson={newPerson}\n        handleSubmit={handleSubmit}\n        handleChange={setNewPerson}\n      />\n      <Numbers \n        filter={filter} \n        persons={persons} \n        refresh={refreshPersons} \n        handleError={handleError}\n        handleNotification={handleNotification}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}